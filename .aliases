### Bash ###
if [[ -n "$BASH_VERSION" ]]; then
  [ -f ~/.bash_profile ] && {
    alias reload="source ~/.bash_profile"
  } || {
    alias reload="source ~/.bashrc"
  }

  alias bashconfig="${VISUAL} ~/.bashrc"

### Zsh ###
elif [[ -n "$ZSH_VERSION" ]]; then
  alias reload="source ~/.zshrc"
  alias zshconfig="${VISUAL} ~/.zshrc"
  alias ohmyzsh="${VISUAL} ~/.oh-my-zsh"
else
  echo "Unknown Shell";
fi

### Linux ###
if [[ $OSTYPE = "linux-gnu"* ]]; then
  alias upgrade="sudo apt update -y && sudo apt upgrade -y";
  alias cwd="pwd | tr -d '\r\n' | xclip -selection clipboard"

  if [[ -x /usr/bin/dircolors ]]; then
    test -r ~/.dircolors && \
      eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls="ls -GFp --color=auto"
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
  fi

  ### Windows Subsystem for Linux ###
  if [[ `grep "Microsoft" /proc/version` 2>/dev/null ]]; then
    # Command Line #
    alias cmdc="cmd.exe /c"

    # File Explorer #
    alias e="cmdc explorer.exe"
    alias e.="e ."

    [ `isInstalled code` ] && {
      alias code="cmdc code"
    }
  elif [[ `grep "Ubuntu" /proc/version` 2>/dev/null ]]; then
    ### Native Linux ###
    # File Explorer #
    if [[ `isInstalled nautilus` ]]; then
      alias e="nautilus"
      alias e.="nautilus ."
    fi
  else
    echo "Unknown Linux Distro"
    echo `uname -a`
  fi
elif [[ $OSTYPE = "darwin"* ]]; then
  alias e="open"
  alias e.="e ."
  alias ls="ls -GFp"
  alias cwd="pwd | tr -d '\r\n' | pbcopy"

  [ `isInstalled brew` ] && {
    alias update="brew update"
  }
else
  echo "Unknown OS";
fi

### Abbr. ###
alias c="clear"
alias r="reset"
alias h="history"
alias g="git"

alias l="ls -CF"
alias lsd=$'echo -n $(ls | grep \'/$\') && echo'
alias ll="ls -alF"
alias la='ls -A'
alias lla='ls -la'
alias l.='ls -d .*'
alias lahtr='ls -lahtr'

alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ~='cd ~'
alias -- -='cd -'

### Overrides ###
[ `isInstalled wget` ] && alias wget="wget -c"
[ `isInstalled bc` ] && alias bc="bc -l"
alias mkdir="mkdir -pv"

### Date & Time ###
alias now='date +"%T %d-%m-%Y"'
alias now-time='date +"%T"'
alias now-date='date +"%d-%m-%Y"'

if [[ `isInstalled curl` ]]; then
  alias ipecho="curl http://ipecho.net/plain; echo"
  alias ipecho-p="ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | \
    grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"

  alias header="curl -I"
fi

### Ports ###
alias ports="netstat -lnt | awk 'NR>2{ print $4 }' | \
  grep -E '(0.0.0.0:|:::)' | sed 's/.*://' | sort -n | uniq"
alias ports-v4="netstat -lnt | awk 'NR>2{ print $4 }' | \
  grep -E '0.0.0.0:' | sed 's/.*://' | sort -n | uniq"
alias ports-v6="netstat -lnt | awk 'NR>2{ print $4 }' | \
  grep -E ':::' | sed 's/.*://' | sort -n | uniq"
alias ports-local="netstat -lnt | awk 'NR>2{ print $4 }' | \
  grep -E '(127.0.0.1:|::1:)' | sed 's/.*://' | sort -n | uniq"

alias psg='ps aux | grep -v grep | grep -i -e VSZ -e'

alias histg='history | grep'

### Git ###
if [[ `isInstalled git` ]]; then
  alias gs="git status"
  alias ga="git add -A"
  alias gb="git branch"
  alias gc="git commit -m \'$1\'"
  alias gp="git push"
  alias gpull="git pull"
  alias gt="git tag \'$1\'"
  alias gpt="git push --tags"
  alias co="git checkout"
fi

### Docker ###
alias drme="docker rm $(docker ps -af status=exited -f status=created -q)"

if [[ `isInstalled hub` ]]; then
  alias pull-request="hub sync && hub pull-request --no-edit | xargs open"
fi

[ `isInstalled cling` ] && alias cling="cling --nologo --std=c++1z"
[ `isInstalled ruby` ] && alias bex="bundle exec"

alias untar="tar xvf"

if [[ `isInstalled python3` ]]; then
  alias python="python3"
fi
